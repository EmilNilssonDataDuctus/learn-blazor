@using System.Net.Http.Json
@using System.Text.Json.Serialization;
@using MudBlazor.Examples.Data.Models
@using BlazorApp.Data

<h1>Employee information</h1>
<MudText Inline="true">Selected items: @(selectedItems1 == null ? "" : string.Join(", ", selectedItems1.OrderBy(x => x.LastName).Select(x => x.LastName)))</MudText>
<MudTable Items="@Elements" MultiSelection="true" T="EmployeeInfo" Hover="true" Comparer="Comparer" SelectedItemsChanged="OnSelectedItemsChanged">
    <HeaderContent>
        <MudTh>FirstName</MudTh>
        <MudTh>LastName</MudTh>
        <MudTh>Email</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="FirstName">@context.FirstName</MudTd>
        <MudTd DataLabel="LastName">@context.LastName</MudTd>
        <MudTd DataLabel="Nr">@context.Email</MudTd>
    </RowTemplate>
</MudTable>

@code {
    private HashSet<EmployeeInfo> selectedItems1 = new HashSet<EmployeeInfo>();
    private ElementComparer Comparer = new();

    private EmployeeInfo[] Elements;

    protected override async Task OnInitializedAsync()
    {
        Elements = await EmployeesService.GetEmployeesData();
    }

    private void OnSelectedItemsChanged(HashSet<EmployeeInfo> elements)
    {
        selectedItems1 = elements;
    }

    class ElementComparer : IEqualityComparer<EmployeeInfo>
    {
        public bool Equals(EmployeeInfo a, EmployeeInfo b) => a?.Email == b?.Email;
        public int GetHashCode(EmployeeInfo x) => HashCode.Combine(x?.Email);
    }

    public record Element
    {
        public string? FirstName { get; set; }
        public string? LastName { get; set; }
        public string? Email { get; set; }
        public string? UserName { get; set; }
        public string? PhoneNumber { get; set; }
        public DateOnly LastLoggedIn { get; set; }
    }
}
